{"version":3,"sources":["../../node_modules/riot/riot.esm.js","main.js","../../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["COMPONENTS_IMPLEMENTATION_MAP","Map","DOM_COMPONENT_INSTANCE_PROPERTY","Symbol","PLUGINS_SET","Set","IS_DIRECTIVE","ATTRIBUTES_KEY_SYMBOL","TEMPLATE_KEY_SYMBOL","SLOTS_KEY_SYMBOL","globals","Object","freeze","domToArray","els","Array","isArray","test","prototype","toString","call","length","from","normalize","values","parseNodes","name","method","names","map","el","n","set","value","attrs","props","keys","forEach","prop","setAttribute","get","checkType","element","type","isFunction","panic","error","Error","callOrAssign","source","constructor","camelToDashCase","string","replace","toLowerCase","dashToCamelCase","_","c","toUpperCase","defineDefaults","defaults","entries","_ref","key","noop","autobindMethods","methods","bind","defineProperty","options","assign","enumerable","writable","configurable","normalizeAttribute","_ref2","defineProperties","properties","_ref3","evaluateAttributeExpressions","attributes","scope","reduce","acc","attribute","evaluate","attr","DOMattributesToObject","getName","tagName","cleanNode","node","children","childNodes","removeChild","EACH","IF","SIMPLE","TAG","bindingTypes","append","parent","start","end","before","insertBefore","fragment","ownerDocument","createDocumentFragment","appendChild","eqeq","a","b","identity","O","indexOf","moreNodes","moreStart","moreEnd","lessNodes","lessStart","lessEnd","compare","m","l","isReversed","futureNodes","futureEnd","currentNodes","currentStart","currentEnd","next","list","i","nextSibling","remove","range","createRange","setStartBefore","setEndAfter","deleteContents","DELETION","INSERTION","SKIP","SKIP_OND","HS","futureStart","futureChanges","currentChanges","k","minLen","link","tresh","keymap","idxInOld","findK","newi","oldi","prev","diff","ptr","_ptr","OND","rows","cols","v","d","r","pv","cv","pd","outer","diffIdx","applyDiff","parentNode","currentLength","live","currentIndex","has","ktr","j","lo","hi","mid","smartDiff","domdiff","currentSame","futureSame","EachBinding","seal","childrenMap","root","condition","template","tags","getKey","indexName","itemName","afterPlaceholder","placeholder","mount","update","collection","items","_loopItems","loopItems","newChildrenMap","batches","fn","unmount","tag","context","mustFilterItem","Boolean","getContext","index","item","binding","filteredItems","size","oldItem","add","clone","cloneNode","push","create","document","createTextNode","offset","createDOM","IfBinding","swap","mustMount","mustUnmount","inNode","outNode","create$1","_ref4","ATTRIBUTE","EVENT","TEXT","VALUE","expressionTypes","REMOVE_ATTRIBUTE","SET_ATTIBUTE","setAllAttributes","_ref5","attributeExpression","removeAllAttributes","removeAttribute","_ref6","oldValue","getMethod","normalizeValue","eventExpression","_ref7","textExpression","_ref8","childNodeIndex","target","val","normalizeValue$1","nodeType","Node","COMMENT_NODE","textNode","replaceChild","data","valueExpression","expression","expressions","Expression","apply","create$2","flattenCollectionMethods","create$3","_ref9","getTag","component","slots","create$6","slotsToMarkup","slotBindings","_ref10","bindings","concat","slot","html","TagBinding","getComponent","create$4","_ref11","create$5","selector","redundantAttribute","querySelector","isSvg","owner","ownerSVGElement","createHTMLTree","createElement","innerHTML","content","creteSVGTree","container","svgNode","importNode","window","DOMParser","parseFromString","documentElement","createDOMTree","moveChildren","firstChild","SVG_RE","injectDOM","dom","createTemplateDOM","TemplateChunk","bindingsData","mustRemoveRoot","$","ctx","querySelectorAll","Slot","moveSlotInnerContent","createSlot","templateData","find","id","createSlots","slotNodes","slotsBindings","s","CSS_BY_NAME","STYLE_NODE_SELECTOR","getStyleNode","style","head","cssManager","css","inject","join","delete","curry","_len","arguments","_key","_len2","args","_key2","COMPONENT_CORE_HELPERS","$$","COMPONENT_LIFECYCLE_METHODS","shouldUpdate","onBeforeMount","onMounted","onBeforeUpdate","onUpdated","onBeforeUnmount","onUnmounted","MOCKED_TEMPLATE_INTERFACE","createComponent","exports","defineComponent","parentScope","state","preserveRoot","componentAPI","components","createSubcomponents","enhanceComponentAPI","evaluateProps","attributeExpressions","currentProps","createAttributeBindings","runPlugins","computeState","oldState","newState","addCssHook","attributeBindings","initialProps","newProps","filter","mountComponent","componentName","compose","fns","f","g","DOM_COMPONENT_INSTANCE_PROPERTY$1","COMPONENTS_IMPLEMENTATION_MAP$1","PLUGINS_SET$1","register","unregister","install","plugin","uninstall","implementation","version","__","console","log","App","RawHtml","riot","animeSample","anime","targets","translateX","duration","direction","easing","loop","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","clear","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","message","stack","overlay","createErrorOverlay","body","getElementById","stackTrace","innerText","getParents","modules","parents","dep","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"main.js","sourceRoot":"../../src/js","sourcesContent":["/* Riot v4.0.0-rc.7, @license MIT */\nconst COMPONENTS_IMPLEMENTATION_MAP = new Map(),\n      DOM_COMPONENT_INSTANCE_PROPERTY = Symbol('riot-component'),\n      PLUGINS_SET = new Set(),\n      IS_DIRECTIVE = 'is',\n      ATTRIBUTES_KEY_SYMBOL = Symbol('attributes'),\n      TEMPLATE_KEY_SYMBOL = Symbol('template'),\n      SLOTS_KEY_SYMBOL = Symbol('slots');\n\nvar globals = /*#__PURE__*/Object.freeze({\n  COMPONENTS_IMPLEMENTATION_MAP: COMPONENTS_IMPLEMENTATION_MAP,\n  DOM_COMPONENT_INSTANCE_PROPERTY: DOM_COMPONENT_INSTANCE_PROPERTY,\n  PLUGINS_SET: PLUGINS_SET,\n  IS_DIRECTIVE: IS_DIRECTIVE,\n  ATTRIBUTES_KEY_SYMBOL: ATTRIBUTES_KEY_SYMBOL,\n  TEMPLATE_KEY_SYMBOL: TEMPLATE_KEY_SYMBOL,\n  SLOTS_KEY_SYMBOL: SLOTS_KEY_SYMBOL\n});\n\n/**\n * Converts any DOM node/s to a loopable array\n * @param   { HTMLElement|NodeList } els - single html element or a node list\n * @returns { Array } always a loopable object\n */\nfunction domToArray(els) {\n  // can this object be already looped?\n  if (!Array.isArray(els)) {\n    // is it a node list?\n    if (/^\\[object (HTMLCollection|NodeList|Object)\\]$/.test(Object.prototype.toString.call(els)) && typeof els.length === 'number') return Array.from(els);else // if it's a single node\n      // it will be returned as \"array\" with one single entry\n      return [els];\n  } // this object could be looped out of the box\n\n\n  return els;\n}\n\n/**\n * Normalize the return values, in case of a single value we avoid to return an array\n * @param   { Array } values - list of values we want to return\n * @returns { Array|string|boolean } either the whole list of values or the single one found\n * @private\n */\n\nconst normalize = values => values.length === 1 ? values[0] : values;\n/**\n * Parse all the nodes received to get/remove/check their attributes\n * @param   { HTMLElement|NodeList|Array } els    - DOM node/s to parse\n * @param   { string|Array }               name   - name or list of attributes\n * @param   { string }                     method - method that will be used to parse the attributes\n * @returns { Array|string } result of the parsing in a list or a single value\n * @private\n */\n\n\nfunction parseNodes(els, name, method) {\n  const names = typeof name === 'string' ? [name] : name;\n  return normalize(domToArray(els).map(el => {\n    return normalize(names.map(n => el[method](n)));\n  }));\n}\n/**\n * Set any attribute on a single or a list of DOM nodes\n * @param   { HTMLElement|NodeList|Array } els   - DOM node/s to parse\n * @param   { string|Object }              name  - either the name of the attribute to set\n *                                                 or a list of properties as object key - value\n * @param   { string }                     value - the new value of the attribute (optional)\n * @returns { HTMLElement|NodeList|Array } the original array of elements passed to this function\n *\n * @example\n *\n * import { set } from 'bianco.attr'\n *\n * const img = document.createElement('img')\n *\n * set(img, 'width', 100)\n *\n * // or also\n * set(img, {\n *   width: 300,\n *   height: 300\n * })\n *\n */\n\n\nfunction set(els, name, value) {\n  const attrs = typeof name === 'object' ? name : {\n    [name]: value\n  };\n  const props = Object.keys(attrs);\n  domToArray(els).forEach(el => {\n    props.forEach(prop => el.setAttribute(prop, attrs[prop]));\n  });\n  return els;\n}\n/**\n * Get any attribute from a single or a list of DOM nodes\n * @param   { HTMLElement|NodeList|Array } els   - DOM node/s to parse\n * @param   { string|Array }               name  - name or list of attributes to get\n * @returns { Array|string } list of the attributes found\n *\n * @example\n *\n * import { get } from 'bianco.attr'\n *\n * const img = document.createElement('img')\n *\n * get(img, 'width') // => '200'\n *\n * // or also\n * get(img, ['width', 'height']) // => ['200', '300']\n *\n * // or also\n * get([img1, img2], ['width', 'height']) // => [['200', '300'], ['500', '200']]\n */\n\nfunction get(els, name) {\n  return parseNodes(els, name, 'getAttribute');\n}\n\n/**\n * Quick type checking\n * @param   {*} element - anything\n * @param   {string} type - type definition\n * @returns {boolean} true if the type corresponds\n */\nfunction checkType(element, type) {\n  return typeof element === type;\n}\n/**\n * Check that will be passed if its argument is a function\n * @param   {*} value - value to check\n * @returns {boolean} - true if the value is a function\n */\n\nfunction isFunction(value) {\n  return checkType(value, 'function');\n}\n\n/* eslint-disable fp/no-mutating-methods */\n/**\n * Throw an error\n * @param {string} error - error message\n * @returns {undefined} it's a IO void function\n */\n\nfunction panic(error) {\n  throw new Error(error);\n}\n/**\n * Call the first argument received only if it's a function otherwise return it as it is\n * @param   {*} source - anything\n * @returns {*} anything\n */\n\nfunction callOrAssign(source) {\n  return isFunction(source) ? source.prototype && source.prototype.constructor ? new source() : source() : source;\n}\n/**\n * Convert a string from camel case to dash-case\n * @param   {string} string - probably a component tag name\n * @returns {string} component name normalized\n */\n\nfunction camelToDashCase(string) {\n  return string.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n/**\n * Convert a string containing dashes to camel case\n * @param   {string} string - input string\n * @returns {string} my-string -> myString\n */\n\nfunction dashToCamelCase(string) {\n  return string.replace(/-(\\w)/g, (_, c) => c.toUpperCase());\n}\n/**\n * Define default properties if they don't exist on the source object\n * @param   {Object} source - object that will receive the default properties\n * @param   {Object} defaults - object containing additional optional keys\n * @returns {Object} the original object received enhanced\n */\n\nfunction defineDefaults(source, defaults) {\n  Object.entries(defaults).forEach((_ref) => {\n    let key = _ref[0],\n        value = _ref[1];\n    if (!source[key]) source[key] = value;\n  });\n  return source;\n} // doese simply nothing\n\nfunction noop() {\n  return this;\n}\n/**\n * Autobind the methods of a source object to itself\n * @param   {Object} source - probably a riot tag instance\n * @param   {Array<string>} methods - list of the methods to autobind\n * @returns {Object} the original object received\n */\n\nfunction autobindMethods(source, methods) {\n  methods.forEach(method => {\n    source[method] = source[method].bind(source);\n  });\n  return source;\n}\n/**\n * Helper function to set an immutable property\n * @param   {Object} source - object where the new property will be set\n * @param   {string} key - object key where the new property will be stored\n * @param   {*} value - value of the new property\n * @param   {Object} options - set the propery overriding the default options\n * @returns {Object} - the original object modified\n */\n\nfunction defineProperty(source, key, value, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  Object.defineProperty(source, key, Object.assign({\n    value,\n    enumerable: false,\n    writable: false,\n    configurable: true\n  }, options));\n  return source;\n}\n/**\n * Normalize a DOM attribute that will be passed to a child component\n * @param   {string} attribute.name - attribute names might be dash case\n * @param   {*} attribute.value - sky is the limit\n * @returns {attribute} attribute object normalized\n */\n\nfunction normalizeAttribute(_ref2) {\n  let name = _ref2.name,\n      value = _ref2.value;\n  return {\n    name: dashToCamelCase(name),\n    value: value\n  };\n}\n/**\n * Define multiple properties on a target object\n * @param   {Object} source - object where the new properties will be set\n * @param   {Object} properties - object containing as key pair the key + value properties\n * @param   {Object} options - set the propery overriding the default options\n * @returns {Object} the original object modified\n */\n\nfunction defineProperties(source, properties, options) {\n  Object.entries(properties).forEach((_ref3) => {\n    let key = _ref3[0],\n        value = _ref3[1];\n    defineProperty(source, key, value, options);\n  });\n  return source;\n}\n/**\n * Evaluate a list of attribute expressions\n * @param   {Array} attributes - attribute expressions generated by the riot compiler\n * @param   {Object} scope - current scope\n * @returns {Object} key value pairs with the result of the computation\n */\n\nfunction evaluateAttributeExpressions(attributes, scope) {\n  return attributes.reduce((acc, attribute) => {\n    const value = attribute.evaluate(scope); // spread attributes should be handled differently\n\n    if (!attribute.name) {\n      return Object.assign({}, acc, value);\n    }\n\n    const attr = normalizeAttribute({\n      value,\n      name: attribute.name\n    });\n    acc[attr.name] = attr.value;\n    return acc;\n  }, {});\n}\n\n/**\n * Get all the element attributes as object\n * @param   {HTMLElement} element - DOM node we want to parse\n * @returns {Object} all the attributes found as a key value pairs\n */\n\nfunction DOMattributesToObject(element) {\n  return Array.from(element.attributes).reduce((acc, attribute) => {\n    const attr = normalizeAttribute(attribute);\n    acc[attr.name] = attr.value;\n    return acc;\n  }, {});\n}\n/**\n * Get the tag name of any DOM node\n * @param   {HTMLElement} element - DOM node we want to inspect\n * @returns {string} name to identify this dom node in riot\n */\n\nfunction getName(element) {\n  return get(element, IS_DIRECTIVE) || element.tagName.toLowerCase();\n}\n\n/**\n * Remove the child nodes from any DOM node\n * @param   {HTMLElement} node - target node\n * @returns {undefined}\n */\nfunction cleanNode(node) {\n  const children = node.childNodes;\n  Array.from(children).forEach(n => node.removeChild(n));\n}\n\nconst EACH = 0;\nconst IF = 1;\nconst SIMPLE = 2;\nconst TAG = 3;\nvar bindingTypes = {\n  EACH,\n  IF,\n  SIMPLE,\n  TAG\n};\n/* get rid of the @ungap/essential-map polyfill */\n\nconst append = (get, parent, children, start, end, before) => {\n  if (end - start < 2) parent.insertBefore(get(children[start], 1), before);else {\n    const fragment = parent.ownerDocument.createDocumentFragment();\n\n    while (start < end) fragment.appendChild(get(children[start++], 1));\n\n    parent.insertBefore(fragment, before);\n  }\n};\n\nconst eqeq = (a, b) => a == b;\n\nconst identity = O => O;\n\nconst indexOf = (moreNodes, moreStart, moreEnd, lessNodes, lessStart, lessEnd, compare) => {\n  const length = lessEnd - lessStart;\n  /* istanbul ignore if */\n\n  if (length < 1) return -1;\n\n  while (moreEnd - moreStart >= length) {\n    let m = moreStart;\n    let l = lessStart;\n\n    while (m < moreEnd && l < lessEnd && compare(moreNodes[m], lessNodes[l])) {\n      m++;\n      l++;\n    }\n\n    if (l === lessEnd) return moreStart;\n    moreStart = m + 1;\n  }\n\n  return -1;\n};\n\nconst isReversed = (futureNodes, futureEnd, currentNodes, currentStart, currentEnd, compare) => {\n  while (currentStart < currentEnd && compare(currentNodes[currentStart], futureNodes[futureEnd - 1])) {\n    currentStart++;\n    futureEnd--;\n  }\n\n  return futureEnd === 0;\n};\n\nconst next = (get, list, i, length, before) => i < length ? get(list[i], 0) : 0 < i ? get(list[i - 1], -0).nextSibling : before;\n\nconst remove = (get, parent, children, start, end) => {\n  if (end - start < 2) parent.removeChild(get(children[start], -1));else {\n    const range = parent.ownerDocument.createRange();\n    range.setStartBefore(get(children[start], -1));\n    range.setEndAfter(get(children[end - 1], -1));\n    range.deleteContents();\n  }\n}; // - - - - - - - - - - - - - - - - - - -\n// diff related constants and utilities\n// - - - - - - - - - - - - - - - - - - -\n\n\nconst DELETION = -1;\nconst INSERTION = 1;\nconst SKIP = 0;\nconst SKIP_OND = 50;\n\nconst HS = (futureNodes, futureStart, futureEnd, futureChanges, currentNodes, currentStart, currentEnd, currentChanges) => {\n  let k = 0;\n  /* istanbul ignore next */\n\n  let minLen = futureChanges < currentChanges ? futureChanges : currentChanges;\n  const link = Array(minLen++);\n  const tresh = Array(minLen);\n  tresh[0] = -1;\n\n  for (let i = 1; i < minLen; i++) tresh[i] = currentEnd;\n\n  const keymap = new Map();\n\n  for (let i = currentStart; i < currentEnd; i++) keymap.set(currentNodes[i], i);\n\n  for (let i = futureStart; i < futureEnd; i++) {\n    const idxInOld = keymap.get(futureNodes[i]);\n\n    if (idxInOld != null) {\n      k = findK(tresh, minLen, idxInOld);\n      /* istanbul ignore else */\n\n      if (-1 < k) {\n        tresh[k] = idxInOld;\n        link[k] = {\n          newi: i,\n          oldi: idxInOld,\n          prev: link[k - 1]\n        };\n      }\n    }\n  }\n\n  k = --minLen;\n  --currentEnd;\n\n  while (tresh[k] > currentEnd) --k;\n\n  minLen = currentChanges + futureChanges - k;\n  const diff = Array(minLen);\n  let ptr = link[k];\n  --futureEnd;\n\n  while (ptr) {\n    const _ptr = ptr,\n          newi = _ptr.newi,\n          oldi = _ptr.oldi;\n\n    while (futureEnd > newi) {\n      diff[--minLen] = INSERTION;\n      --futureEnd;\n    }\n\n    while (currentEnd > oldi) {\n      diff[--minLen] = DELETION;\n      --currentEnd;\n    }\n\n    diff[--minLen] = SKIP;\n    --futureEnd;\n    --currentEnd;\n    ptr = ptr.prev;\n  }\n\n  while (futureEnd >= futureStart) {\n    diff[--minLen] = INSERTION;\n    --futureEnd;\n  }\n\n  while (currentEnd >= currentStart) {\n    diff[--minLen] = DELETION;\n    --currentEnd;\n  }\n\n  return diff;\n}; // this is pretty much the same petit-dom code without the delete map part\n// https://github.com/yelouafi/petit-dom/blob/bd6f5c919b5ae5297be01612c524c40be45f14a7/src/vdom.js#L556-L561\n\n\nconst OND = (futureNodes, futureStart, rows, currentNodes, currentStart, cols, compare) => {\n  const length = rows + cols;\n  const v = [];\n  let d, k, r, c, pv, cv, pd;\n\n  outer: for (d = 0; d <= length; d++) {\n    /* istanbul ignore if */\n    if (d > SKIP_OND) return null;\n    pd = d - 1;\n    /* istanbul ignore next */\n\n    pv = d ? v[d - 1] : [0, 0];\n    cv = v[d] = [];\n\n    for (k = -d; k <= d; k += 2) {\n      if (k === -d || k !== d && pv[pd + k - 1] < pv[pd + k + 1]) {\n        c = pv[pd + k + 1];\n      } else {\n        c = pv[pd + k - 1] + 1;\n      }\n\n      r = c - k;\n\n      while (c < cols && r < rows && compare(currentNodes[currentStart + c], futureNodes[futureStart + r])) {\n        c++;\n        r++;\n      }\n\n      if (c === cols && r === rows) {\n        break outer;\n      }\n\n      cv[d + k] = c;\n    }\n  }\n\n  const diff = Array(d / 2 + length / 2);\n  let diffIdx = diff.length - 1;\n\n  for (d = v.length - 1; d >= 0; d--) {\n    while (c > 0 && r > 0 && compare(currentNodes[currentStart + c - 1], futureNodes[futureStart + r - 1])) {\n      // diagonal edge = equality\n      diff[diffIdx--] = SKIP;\n      c--;\n      r--;\n    }\n\n    if (!d) break;\n    pd = d - 1;\n    /* istanbul ignore next */\n\n    pv = d ? v[d - 1] : [0, 0];\n    k = c - r;\n\n    if (k === -d || k !== d && pv[pd + k - 1] < pv[pd + k + 1]) {\n      // vertical edge = insertion\n      r--;\n      diff[diffIdx--] = INSERTION;\n    } else {\n      // horizontal edge = deletion\n      c--;\n      diff[diffIdx--] = DELETION;\n    }\n  }\n\n  return diff;\n};\n\nconst applyDiff = (diff, get, parentNode, futureNodes, futureStart, currentNodes, currentStart, currentLength, before) => {\n  const live = new Map();\n  const length = diff.length;\n  let currentIndex = currentStart;\n  let i = 0;\n\n  while (i < length) {\n    switch (diff[i++]) {\n      case SKIP:\n        futureStart++;\n        currentIndex++;\n        break;\n\n      case INSERTION:\n        // TODO: bulk appends for sequential nodes\n        live.set(futureNodes[futureStart], 1);\n        append(get, parentNode, futureNodes, futureStart++, futureStart, currentIndex < currentLength ? get(currentNodes[currentIndex], 0) : before);\n        break;\n\n      case DELETION:\n        currentIndex++;\n        break;\n    }\n  }\n\n  i = 0;\n\n  while (i < length) {\n    switch (diff[i++]) {\n      case SKIP:\n        currentStart++;\n        break;\n\n      case DELETION:\n        // TODO: bulk removes for sequential nodes\n        if (live.has(currentNodes[currentStart])) currentStart++;else remove(get, parentNode, currentNodes, currentStart++, currentStart);\n        break;\n    }\n  }\n};\n\nconst findK = (ktr, length, j) => {\n  let lo = 1;\n  let hi = length;\n\n  while (lo < hi) {\n    const mid = (lo + hi) / 2 >>> 0;\n    if (j < ktr[mid]) hi = mid;else lo = mid + 1;\n  }\n\n  return lo;\n};\n\nconst smartDiff = (get, parentNode, futureNodes, futureStart, futureEnd, futureChanges, currentNodes, currentStart, currentEnd, currentChanges, currentLength, compare, before) => {\n  applyDiff(OND(futureNodes, futureStart, futureChanges, currentNodes, currentStart, currentChanges, compare) || HS(futureNodes, futureStart, futureEnd, futureChanges, currentNodes, currentStart, currentEnd, currentChanges), get, parentNode, futureNodes, futureStart, currentNodes, currentStart, currentLength, before);\n};\n/*! (c) 2018 Andrea Giammarchi (ISC) */\n\n\nconst domdiff = (parentNode, // where changes happen\ncurrentNodes, // Array of current items/nodes\nfutureNodes, // Array of future items/nodes\noptions // optional object with one of the following properties\n//  before: domNode\n//  compare(generic, generic) => true if same generic\n//  node(generic) => Node\n) => {\n  if (!options) options = {};\n  const compare = options.compare || eqeq;\n  const get = options.node || identity;\n  const before = options.before == null ? null : get(options.before, 0);\n  const currentLength = currentNodes.length;\n  let currentEnd = currentLength;\n  let currentStart = 0;\n  let futureEnd = futureNodes.length;\n  let futureStart = 0; // common prefix\n\n  while (currentStart < currentEnd && futureStart < futureEnd && compare(currentNodes[currentStart], futureNodes[futureStart])) {\n    currentStart++;\n    futureStart++;\n  } // common suffix\n\n\n  while (currentStart < currentEnd && futureStart < futureEnd && compare(currentNodes[currentEnd - 1], futureNodes[futureEnd - 1])) {\n    currentEnd--;\n    futureEnd--;\n  }\n\n  const currentSame = currentStart === currentEnd;\n  const futureSame = futureStart === futureEnd; // same list\n\n  if (currentSame && futureSame) return futureNodes; // only stuff to add\n\n  if (currentSame && futureStart < futureEnd) {\n    append(get, parentNode, futureNodes, futureStart, futureEnd, next(get, currentNodes, currentStart, currentLength, before));\n    return futureNodes;\n  } // only stuff to remove\n\n\n  if (futureSame && currentStart < currentEnd) {\n    remove(get, parentNode, currentNodes, currentStart, currentEnd);\n    return futureNodes;\n  }\n\n  const currentChanges = currentEnd - currentStart;\n  const futureChanges = futureEnd - futureStart;\n  let i = -1; // 2 simple indels: the shortest sequence is a subsequence of the longest\n\n  if (currentChanges < futureChanges) {\n    i = indexOf(futureNodes, futureStart, futureEnd, currentNodes, currentStart, currentEnd, compare); // inner diff\n\n    if (-1 < i) {\n      append(get, parentNode, futureNodes, futureStart, i, get(currentNodes[currentStart], 0));\n      append(get, parentNode, futureNodes, i + currentChanges, futureEnd, next(get, currentNodes, currentEnd, currentLength, before));\n      return futureNodes;\n    }\n  }\n  /* istanbul ignore else */\n  else if (futureChanges < currentChanges) {\n      i = indexOf(currentNodes, currentStart, currentEnd, futureNodes, futureStart, futureEnd, compare); // outer diff\n\n      if (-1 < i) {\n        remove(get, parentNode, currentNodes, currentStart, i);\n        remove(get, parentNode, currentNodes, i + futureChanges, currentEnd);\n        return futureNodes;\n      }\n    } // common case with one replacement for many nodes\n  // or many nodes replaced for a single one\n\n  /* istanbul ignore else */\n\n\n  if (currentChanges < 2 || futureChanges < 2) {\n    append(get, parentNode, futureNodes, futureStart, futureEnd, get(currentNodes[currentStart], 0));\n    remove(get, parentNode, currentNodes, currentStart, currentEnd);\n    return futureNodes;\n  } // the half match diff part has been skipped in petit-dom\n  // https://github.com/yelouafi/petit-dom/blob/bd6f5c919b5ae5297be01612c524c40be45f14a7/src/vdom.js#L391-L397\n  // accordingly, I think it's safe to skip in here too\n  // if one day it'll come out like the speediest thing ever to do\n  // then I might add it in here too\n  // Extra: before going too fancy, what about reversed lists ?\n  //        This should bail out pretty quickly if that's not the case.\n\n\n  if (currentChanges === futureChanges && isReversed(futureNodes, futureEnd, currentNodes, currentStart, currentEnd, compare)) {\n    append(get, parentNode, futureNodes, futureStart, futureEnd, next(get, currentNodes, currentEnd, currentLength, before));\n    return futureNodes;\n  } // last resort through a smart diff\n\n\n  smartDiff(get, parentNode, futureNodes, futureStart, futureEnd, futureChanges, currentNodes, currentStart, currentEnd, currentChanges, currentLength, compare, before);\n  return futureNodes;\n};\n\nconst EachBinding = Object.seal({\n  // dynamic binding properties\n  childrenMap: null,\n  node: null,\n  root: null,\n  condition: null,\n  evaluate: null,\n  template: null,\n  tags: [],\n  getKey: null,\n  indexName: null,\n  itemName: null,\n  afterPlaceholder: null,\n  placeholder: null,\n\n  // API methods\n  mount(scope) {\n    return this.update(scope);\n  },\n\n  update(scope) {\n    const placeholder = this.placeholder;\n    const collection = this.evaluate(scope);\n    const items = collection ? Array.from(collection) : [];\n    const parent = placeholder.parentNode; // prepare the diffing\n\n    const _loopItems = loopItems(items, scope, this),\n          newChildrenMap = _loopItems.newChildrenMap,\n          batches = _loopItems.batches,\n          futureNodes = _loopItems.futureNodes;\n    /**\n     * DOM Updates\n     */\n\n\n    const before = this.tags[this.tags.length - 1];\n    domdiff(parent, this.tags, futureNodes, {\n      before: before ? before.nextSibling : placeholder.nextSibling\n    }); // trigger the mounts and the updates\n\n    batches.forEach(fn => fn()); // update the children map\n\n    this.childrenMap = newChildrenMap;\n    this.tags = futureNodes;\n    return this;\n  },\n\n  unmount() {\n    Array.from(this.childrenMap.values()).forEach((_ref) => {\n      let tag = _ref.tag,\n          context = _ref.context;\n      tag.unmount(context, true);\n    });\n    this.childrenMap = new Map();\n    this.tags = [];\n    return this;\n  }\n\n});\n/**\n * Check whether a tag must be filtered from a loop\n * @param   {Function} condition - filter function\n * @param   {Object} context - argument passed to the filter function\n * @returns {boolean} true if this item should be skipped\n */\n\nfunction mustFilterItem(condition, context) {\n  return condition ? Boolean(condition(context)) === false : false;\n}\n/**\n * Get the context of the looped tag\n * @param   {string} options.itemName - key to identify the looped item in the new context\n * @param   {string} options.indexName - key to identify the index of the looped item\n * @param   {number} options.index - current index\n * @param   {*} options.item - collection item looped\n * @param   {*} options.scope - current parent scope\n * @returns {Object} enhanced scope object\n */\n\n\nfunction getContext(_ref2) {\n  let itemName = _ref2.itemName,\n      indexName = _ref2.indexName,\n      index = _ref2.index,\n      item = _ref2.item,\n      scope = _ref2.scope;\n  const context = Object.assign({\n    [itemName]: item\n  }, scope);\n\n  if (indexName) {\n    return Object.assign({\n      [indexName]: index\n    }, context);\n  }\n\n  return context;\n}\n/**\n * Loop the current tag items\n * @param   { Array } items - tag collection\n * @param   { * } scope - tag scope\n * @param   { EeachBinding } binding - each binding object instance\n * @returns { Object } data\n * @returns { Map } data.newChildrenMap - a Map containing the new children tags structure\n * @returns { Array } data.batches - array containing functions the tags lifecycle functions to trigger\n * @returns { Array } data.futureNodes - array containing the nodes we need to diff\n */\n\n\nfunction loopItems(items, scope, binding) {\n  const condition = binding.condition,\n        template = binding.template,\n        childrenMap = binding.childrenMap,\n        itemName = binding.itemName,\n        getKey = binding.getKey,\n        indexName = binding.indexName,\n        root = binding.root;\n  const filteredItems = new Set();\n  const newChildrenMap = new Map();\n  const batches = [];\n  const futureNodes = [];\n  items.forEach((item, i) => {\n    // the real item index should be subtracted to the items that were filtered\n    const index = i - filteredItems.size;\n    const context = getContext({\n      itemName,\n      indexName,\n      index,\n      item,\n      scope\n    });\n    const key = getKey ? getKey(context) : index;\n    const oldItem = childrenMap.get(key);\n\n    if (mustFilterItem(condition, context)) {\n      filteredItems.add(oldItem);\n      return;\n    }\n\n    const tag = oldItem ? oldItem.tag : template.clone();\n    const el = oldItem ? tag.el : root.cloneNode();\n\n    if (!oldItem) {\n      batches.push(() => tag.mount(el, context));\n    } else {\n      batches.push(() => tag.update(context));\n    }\n\n    futureNodes.push(el); // update the children map\n\n    newChildrenMap.set(key, {\n      tag,\n      context,\n      index\n    });\n  });\n  return {\n    newChildrenMap,\n    batches,\n    futureNodes\n  };\n}\n\nfunction create(node, _ref3) {\n  let evaluate = _ref3.evaluate,\n      condition = _ref3.condition,\n      itemName = _ref3.itemName,\n      indexName = _ref3.indexName,\n      getKey = _ref3.getKey,\n      template = _ref3.template;\n  const placeholder = document.createTextNode('');\n  const parent = node.parentNode;\n  const root = node.cloneNode();\n  const offset = Array.from(parent.childNodes).indexOf(node);\n  parent.insertBefore(placeholder, node);\n  parent.removeChild(node);\n  return Object.assign({}, EachBinding, {\n    childrenMap: new Map(),\n    node,\n    root,\n    offset,\n    condition,\n    evaluate,\n    template: template.createDOM(node),\n    getKey,\n    indexName,\n    itemName,\n    placeholder\n  });\n}\n/**\n * Binding responsible for the `if` directive\n */\n\n\nconst IfBinding = Object.seal({\n  // dynamic binding properties\n  node: null,\n  evaluate: null,\n  placeholder: null,\n  template: '',\n\n  // API methods\n  mount(scope) {\n    swap(this.placeholder, this.node);\n    return this.update(scope);\n  },\n\n  update(scope) {\n    const value = !!this.evaluate(scope);\n    const mustMount = !this.value && value;\n    const mustUnmount = this.value && !value;\n\n    switch (true) {\n      case mustMount:\n        swap(this.node, this.placeholder);\n\n        if (this.template) {\n          this.template = this.template.clone();\n          this.template.mount(this.node, scope);\n        }\n\n        break;\n\n      case mustUnmount:\n        this.unmount(scope);\n        swap(this.placeholder, this.node);\n        break;\n\n      default:\n        if (value) this.template.update(scope);\n    }\n\n    this.value = value;\n    return this;\n  },\n\n  unmount(scope) {\n    const template = this.template;\n\n    if (template) {\n      template.unmount(scope);\n    }\n\n    return this;\n  }\n\n});\n\nfunction swap(inNode, outNode) {\n  const parent = outNode.parentNode;\n  parent.insertBefore(inNode, outNode);\n  parent.removeChild(outNode);\n}\n\nfunction create$1(node, _ref4) {\n  let evaluate = _ref4.evaluate,\n      template = _ref4.template;\n  return Object.assign({}, IfBinding, {\n    node,\n    evaluate,\n    placeholder: document.createTextNode(''),\n    template: template.createDOM(node)\n  });\n}\n\nconst ATTRIBUTE = 0;\nconst EVENT = 1;\nconst TEXT = 2;\nconst VALUE = 3;\nvar expressionTypes = {\n  ATTRIBUTE,\n  EVENT,\n  TEXT,\n  VALUE\n};\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nconst SET_ATTIBUTE = 'setAttribute';\n/**\n * Add all the attributes provided\n * @param   {HTMLElement} node - target node\n * @param   {Object} attributes - object containing the attributes names and values\n * @returns {undefined} sorry it's a void function :(\n */\n\nfunction setAllAttributes(node, attributes) {\n  Object.entries(attributes).forEach((_ref5) => {\n    let name = _ref5[0],\n        value = _ref5[1];\n    return attributeExpression(node, {\n      name\n    }, value);\n  });\n}\n/**\n * Remove all the attributes provided\n * @param   {HTMLElement} node - target node\n * @param   {Object} attributes - object containing all the attribute names\n * @returns {undefined} sorry it's a void function :(\n */\n\n\nfunction removeAllAttributes(node, attributes) {\n  Object.keys(attributes).forEach(attribute => node.removeAttribute(attribute));\n}\n/**\n * This methods handles the DOM attributes updates\n * @param   {HTMLElement} node - target node\n * @param   {Object} expression - expression object\n * @param   {string} expression.name - attribute name\n * @param   {*} value - new expression value\n * @param   {*} oldValue - the old expression cached value\n * @returns {undefined}\n */\n\n\nfunction attributeExpression(node, _ref6, value, oldValue) {\n  let name = _ref6.name;\n\n  // is it a spread operator? {...attributes}\n  if (!name) {\n    // is the value still truthy?\n    if (value) {\n      setAllAttributes(node, value);\n    } else if (oldValue) {\n      // otherwise remove all the old attributes\n      removeAllAttributes(node, oldValue);\n    }\n\n    return;\n  } // handle boolean attributes\n\n\n  if (typeof value === 'boolean') {\n    node[name] = value;\n  }\n\n  node[getMethod(value)](name, normalizeValue(name, value));\n}\n/**\n * Get the attribute modifier method\n * @param   {*} value - if truthy we return `setAttribute` othewise `removeAttribute`\n * @returns {string} the node attribute modifier method name\n */\n\n\nfunction getMethod(value) {\n  return value && typeof value !== 'object' ? SET_ATTIBUTE : REMOVE_ATTRIBUTE;\n}\n/**\n * Get the value as string\n * @param   {string} name - attribute name\n * @param   {*} value - user input value\n * @returns {string} input value as string\n */\n\n\nfunction normalizeValue(name, value) {\n  // be sure that expressions like selected={ true } will be always rendered as selected='selected'\n  if (value === true) return name;\n  return value;\n}\n/**\n * Set a new event listener\n * @param   {HTMLElement} node - target node\n * @param   {Object} expression - expression object\n * @param   {string} expression.name - event name\n * @param   {*} value - new expression value\n * @returns {undefined}\n */\n\n\nfunction eventExpression(node, _ref7, value) {\n  let name = _ref7.name;\n  node[name] = value;\n}\n/**\n * This methods handles a simple text expression update\n * @param   {HTMLElement} node - target node\n * @param   {Object} expression - expression object\n * @param   {number} expression.childNodeIndex - index to find the text node to update\n * @param   {*} value - new expression value\n * @returns {undefined}\n */\n\n\nfunction textExpression(node, _ref8, value) {\n  let childNodeIndex = _ref8.childNodeIndex;\n  const target = node.childNodes[childNodeIndex];\n  const val = normalizeValue$1(value); // replace the target if it's a placeholder comment\n\n  if (target.nodeType === Node.COMMENT_NODE) {\n    const textNode = document.createTextNode(val);\n    node.replaceChild(textNode, target);\n  } else {\n    target.data = normalizeValue$1(val);\n  }\n}\n/**\n * Normalize the user value in order to render a empty string in case of falsy values\n * @param   {*} value - user input value\n * @returns {string} hopefully a string\n */\n\n\nfunction normalizeValue$1(value) {\n  return value != null ? value : '';\n}\n/**\n * This methods handles the input fileds value updates\n * @param   {HTMLElement} node - target node\n * @param   {Object} expression - expression object\n * @param   {*} value - new expression value\n * @returns {undefined}\n */\n\n\nfunction valueExpression(node, expression, value) {\n  node.value = value;\n}\n\nvar expressions = {\n  [ATTRIBUTE]: attributeExpression,\n  [EVENT]: eventExpression,\n  [TEXT]: textExpression,\n  [VALUE]: valueExpression\n};\nconst Expression = Object.seal({\n  // Static props\n  node: null,\n  value: null,\n\n  // API methods\n\n  /**\n   * Mount the expression evaluating its initial value\n   * @param   {*} scope - argument passed to the expression to evaluate its current values\n   * @returns {Expression} self\n   */\n  mount(scope) {\n    // hopefully a pure function\n    this.value = this.evaluate(scope); // IO() DOM updates\n\n    apply(this, this.value);\n    return this;\n  },\n\n  /**\n   * Update the expression if its value changed\n   * @param   {*} scope - argument passed to the expression to evaluate its current values\n   * @returns {Expression} self\n   */\n  update(scope) {\n    // pure function\n    const value = this.evaluate(scope);\n\n    if (this.value !== value) {\n      // IO() DOM updates\n      apply(this, value);\n      this.value = value;\n    }\n\n    return this;\n  },\n\n  /**\n   * Expression teardown method\n   * @returns {Expression} self\n   */\n  unmount() {\n    return this;\n  }\n\n});\n/**\n * IO() function to handle the DOM updates\n * @param {Expression} expression - expression object\n * @param {*} value - current expression value\n * @returns {undefined}\n */\n\nfunction apply(expression, value) {\n  return expressions[expression.type](expression.node, expression, value, expression.value);\n}\n\nfunction create$2(node, data) {\n  return Object.assign({}, Expression, data, {\n    node\n  });\n}\n/**\n * Create a flat object having as keys a list of methods that if dispatched will propagate\n * on the whole collection\n * @param   {Array} collection - collection to iterate\n * @param   {Array<string>} methods - methods to execute on each item of the collection\n * @param   {*} context - context returned by the new methods created\n * @returns {Object} a new object to simplify the the nested methods dispatching\n */\n\n\nfunction flattenCollectionMethods(collection, methods, context) {\n  return methods.reduce((acc, method) => {\n    return Object.assign({}, acc, {\n      [method]: scope => {\n        return collection.map(item => item[method](scope)) && context;\n      }\n    });\n  }, {});\n}\n\nfunction create$3(node, _ref9) {\n  let expressions = _ref9.expressions;\n  return Object.assign({}, flattenCollectionMethods(expressions.map(expression => create$2(node, expression)), ['mount', 'update', 'unmount']));\n}\n/**\n * Create a new tag object if it was registered before, otherwise fallback to the simple\n * template chunk\n * @param   {Function} component - component factory function\n * @param   {Array<Object>} slots - array containing the slots markup\n * @param   {Array} attributes - dynamic attributes that will be received by the tag element\n * @returns {TagImplementation|TemplateChunk} a tag implementation or a template chunk as fallback\n */\n\n\nfunction getTag(component, slots, attributes) {\n  if (slots === void 0) {\n    slots = [];\n  }\n\n  if (attributes === void 0) {\n    attributes = [];\n  }\n\n  // if this tag was registered before we will return its implementation\n  if (component) {\n    return component({\n      slots,\n      attributes\n    });\n  } // otherwise we return a template chunk\n\n\n  return create$6(slotsToMarkup(slots), [...slotBindings(slots), {\n    // the attributes should be registered as binding\n    // if we fallback to a normal template chunk\n    expressions: attributes.map(attr => {\n      return Object.assign({\n        type: ATTRIBUTE\n      }, attr);\n    })\n  }]);\n}\n/**\n * Merge all the slots bindings into a single array\n * @param   {Array<Object>} slots - slots collection\n * @returns {Array<Bindings>} flatten bindings array\n */\n\n\nfunction slotBindings(slots) {\n  return slots.reduce((acc, _ref10) => {\n    let bindings = _ref10.bindings;\n    return acc.concat(bindings);\n  }, []);\n}\n/**\n * Merge all the slots together in a single markup string\n * @param   {Array<Object>} slots - slots collection\n * @returns {string} markup of all the slots in a single string\n */\n\n\nfunction slotsToMarkup(slots) {\n  return slots.reduce((acc, slot) => {\n    return acc + slot.html;\n  }, '');\n}\n\nconst TagBinding = Object.seal({\n  // dynamic binding properties\n  node: null,\n  evaluate: null,\n  name: null,\n  slots: null,\n  tag: null,\n  attributes: null,\n  getComponent: null,\n\n  mount(scope) {\n    return this.update(scope);\n  },\n\n  update(scope) {\n    const name = this.evaluate(scope); // simple update\n\n    if (name === this.name) {\n      this.tag.update(scope);\n    } else {\n      // unmount the old tag if it exists\n      this.unmount(); // mount the new tag\n\n      this.name = name;\n      this.tag = getTag(this.getComponent(name), this.slots, this.attributes);\n      this.tag.mount(this.node, scope);\n    }\n\n    return this;\n  },\n\n  unmount() {\n    if (this.tag) {\n      // keep the root tag\n      this.tag.unmount(true);\n    }\n\n    return this;\n  }\n\n});\n\nfunction create$4(node, _ref11) {\n  let evaluate = _ref11.evaluate,\n      getComponent = _ref11.getComponent,\n      slots = _ref11.slots,\n      attributes = _ref11.attributes;\n  return Object.assign({}, TagBinding, {\n    node,\n    evaluate,\n    slots,\n    attributes,\n    getComponent\n  });\n}\n\nvar bindings = {\n  [IF]: create$1,\n  [SIMPLE]: create$3,\n  [EACH]: create,\n  [TAG]: create$4\n};\n/**\n * Bind a new expression object to a DOM node\n * @param   {HTMLElement} root - DOM node where to bind the expression\n * @param   {Object} binding - binding data\n * @returns {Expression} Expression object\n */\n\nfunction create$5(root, binding) {\n  const selector = binding.selector,\n        type = binding.type,\n        redundantAttribute = binding.redundantAttribute,\n        expressions = binding.expressions; // find the node to apply the bindings\n\n  const node = selector ? root.querySelector(selector) : root; // remove eventually additional attributes created only to select this node\n\n  if (redundantAttribute) node.removeAttribute(redundantAttribute); // init the binding\n\n  return (bindings[type] || bindings[SIMPLE])(node, Object.assign({}, binding, {\n    expressions: expressions || []\n  }));\n}\n/**\n * Check if an element is part of an svg\n * @param   {HTMLElement}  el - element to check\n * @returns {boolean} true if we are in an svg context\n */\n\n\nfunction isSvg(el) {\n  const owner = el.ownerSVGElement;\n  return !!owner || owner === null;\n} // in this case a simple innerHTML is enough\n\n\nfunction createHTMLTree(html) {\n  const template = document.createElement('template');\n  template.innerHTML = html;\n  return template.content;\n} // for svg nodes we need a bit more work\n\n\nfunction creteSVGTree(html, container) {\n  // create the SVGNode\n  const svgNode = container.ownerDocument.importNode(new window.DOMParser().parseFromString(`<svg xmlns=\"http://www.w3.org/2000/svg\">${html}</svg>`, 'application/xml').documentElement, true);\n  return svgNode;\n}\n/**\n * Create the DOM that will be injected\n * @param {Object} root - DOM node to find out the context where the fragment will be created\n * @param   {string} html - DOM to create as string\n * @returns {HTMLDocumentFragment|HTMLElement} a new html fragment\n */\n\n\nfunction createDOMTree(root, html) {\n  if (isSvg(root)) return creteSVGTree(html, root);\n  return createHTMLTree(html);\n}\n/**\n * Move all the child nodes from a source tag to another\n * @param   {HTMLElement} source - source node\n * @param   {HTMLElement} target - target node\n * @returns {undefined} it's a void method ¯\\_(ツ)_/¯\n */\n// Ignore this helper because it's needed only for svg tags\n\n/* istanbul ignore next */\n\n\nfunction moveChildren(source, target) {\n  if (source.firstChild) {\n    target.appendChild(source.firstChild);\n    moveChildren(source, target);\n  }\n}\n\nconst SVG_RE = /svg/i;\n/**\n * Inject the DOM tree into a target node\n * @param   {HTMLElement} el - target element\n * @param   {HTMLFragment|SVGElement} dom - dom tree to inject\n * @returns {undefined}\n */\n\nfunction injectDOM(el, dom) {\n  if (SVG_RE.test(el.tagName)) {\n    moveChildren(dom, el);\n  } else {\n    el.appendChild(dom);\n  }\n}\n/**\n * Create the Template DOM skeleton\n * @param   {HTMLElement} el - root node where the DOM will be injected\n * @param   {string} html - markup that will be injected into the root node\n * @returns {HTMLFragment} fragment that will be injected into the root node\n */\n\n\nfunction createTemplateDOM(el, html) {\n  return html && (typeof html === 'string' ? createDOMTree(el, html) : html);\n}\n/**\n * Template Chunk model\n * @type {Object}\n */\n\n\nconst TemplateChunk = Object.freeze({\n  // Static props\n  bindings: null,\n  bindingsData: null,\n  html: null,\n  dom: null,\n  el: null,\n\n  /**\n   * Create the template DOM structure that will be cloned on each mount\n   * @param   {HTMLElement} el - the root node\n   * @returns {TemplateChunk} self\n   */\n  createDOM(el) {\n    // make sure that the DOM gets created before cloning the template\n    this.dom = this.dom || createTemplateDOM(el, this.html);\n    return this;\n  },\n\n  // API methods\n\n  /**\n   * Attach the template to a DOM node\n   * @param   {HTMLElement} el - target DOM node\n   * @param   {*} scope - template data\n   * @returns {TemplateChunk} self\n   */\n  mount(el, scope) {\n    if (!el) throw new Error('Please provide DOM node to mount properly your template');\n    if (this.el) this.unmount(scope);\n    this.el = el; // create the DOM if it wasn't created before\n\n    this.createDOM(el);\n    if (this.dom) injectDOM(el, this.dom.cloneNode(true)); // create the bindings\n\n    this.bindings = this.bindingsData.map(binding => create$5(this.el, binding));\n    this.bindings.forEach(b => b.mount(scope));\n    return this;\n  },\n\n  /**\n   * Update the template with fresh data\n   * @param   {*} scope - template data\n   * @returns {TemplateChunk} self\n   */\n  update(scope) {\n    this.bindings.forEach(b => b.update(scope));\n    return this;\n  },\n\n  /**\n   * Remove the template from the node where it was initially mounted\n   * @param   {*} scope - template data\n   * @param   {boolean} mustRemoveRoot - if true remove the root element\n   * @returns {TemplateChunk} self\n   */\n  unmount(scope, mustRemoveRoot) {\n    if (this.el) {\n      this.bindings.forEach(b => b.unmount(scope));\n      cleanNode(this.el);\n\n      if (mustRemoveRoot && this.el.parentNode) {\n        this.el.parentNode.removeChild(this.el);\n      }\n\n      this.el = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * Clone the template chunk\n   * @returns {TemplateChunk} a clone of this object resetting the this.el property\n   */\n  clone() {\n    return Object.assign({}, this, {\n      el: null\n    });\n  }\n\n});\n/**\n * Create a template chunk wiring also the bindings\n * @param   {string|HTMLElement} html - template string\n * @param   {Array} bindings - bindings collection\n * @returns {TemplateChunk} a new TemplateChunk copy\n */\n\nfunction create$6(html, bindings) {\n  if (bindings === void 0) {\n    bindings = [];\n  }\n\n  return Object.assign({}, TemplateChunk, {\n    html,\n    bindingsData: bindings\n  });\n}\n\n/**\n * Simple helper to find DOM nodes returning them as array like loopable object\n * @param   { string|DOMNodeList } selector - either the query or the DOM nodes to arraify\n * @param   { HTMLElement }        ctx      - context defining where the query will search for the DOM nodes\n * @returns { Array } DOM nodes found as array\n */\n\nfunction $(selector, ctx) {\n  return domToArray(typeof selector === 'string' ? (ctx || document).querySelectorAll(selector) : selector);\n}\n\n/**\n * Binding responsible for the slots\n */\n\nconst Slot = Object.seal({\n  // dynamic binding properties\n  node: null,\n  name: null,\n  template: null,\n\n  // API methods\n  mount(scope) {\n    if (this.template) {\n      this.template.mount(this.node, scope);\n      moveSlotInnerContent(this.node);\n    } else {\n      this.node.parentNode.removeChild(this.node);\n    }\n\n    return this;\n  },\n\n  update(scope) {\n    if (this.template) {\n      this.template.update(scope);\n    }\n\n    return this;\n  },\n\n  unmount(scope) {\n    if (this.template) {\n      this.template.unmount(scope);\n    }\n\n    return this;\n  }\n\n});\n/**\n * Move the inner content of the slots outside of them\n * @param   {HTMLNode} slot - slot node\n * @returns {undefined} it's a void function\n */\n\nfunction moveSlotInnerContent(slot) {\n  if (slot.firstChild) {\n    slot.parentNode.insertBefore(slot.firstChild, slot);\n    moveSlotInnerContent(slot);\n  }\n\n  if (slot.parentNode) {\n    slot.parentNode.removeChild(slot);\n  }\n}\n/**\n * Create a single slot binding\n * @param   {HTMLElement} root - component root\n * @param   {HTMLElement} node - slot node\n * @param   {string} options.name - slot id\n * @param   {Array} options.slots - component slots\n * @returns {Object} Slot binding object\n */\n\n\nfunction createSlot(root, node, _ref) {\n  let name = _ref.name,\n      slots = _ref.slots;\n  const templateData = slots.find((_ref2) => {\n    let id = _ref2.id;\n    return id === name;\n  });\n  return Object.assign({}, Slot, {\n    node,\n    name,\n    template: templateData && create$6(templateData.html, templateData.bindings).createDOM(root)\n  });\n}\n/**\n * Create the object that will manage the slots\n * @param   {HTMLElement} root - component root element\n * @param   {Array} slots - slots objects containing html and bindings\n * @return  {Object} tag like interface that will manage all the slots\n */\n\n\nfunction createSlots(root, slots) {\n  const slotNodes = $('slot', root);\n  const slotsBindings = slotNodes.map(node => {\n    const name = get(node, 'name') || 'default';\n    return createSlot(root, node, {\n      name,\n      slots\n    });\n  });\n  return {\n    mount(scope) {\n      slotsBindings.forEach(s => s.mount(scope));\n      return this;\n    },\n\n    update(scope) {\n      slotsBindings.forEach(s => s.update(scope));\n      return this;\n    },\n\n    unmount(scope) {\n      slotsBindings.forEach(s => s.unmount(scope));\n      return this;\n    }\n\n  };\n}\n\nconst CSS_BY_NAME = new Map();\nconst STYLE_NODE_SELECTOR = 'style[riot]'; // memoized curried function\n\nconst getStyleNode = (style => {\n  return () => {\n    // lazy evaluation:\n    // if this function was already called before\n    // we return its cached result\n    if (style) return style; // create a new style element or use an existing one\n    // and cache it internally\n\n    style = $(STYLE_NODE_SELECTOR)[0] || document.createElement('style');\n    set(style, 'type', 'text/css');\n    /* istanbul ignore next */\n\n    if (!style.parentNode) document.head.appendChild(style);\n    return style;\n  };\n})();\n/**\n * Object that will be used to inject and manage the css of every tag instance\n */\n\n\nvar cssManager = {\n  CSS_BY_NAME,\n\n  /**\n   * Save a tag style to be later injected into DOM\n   * @param { string } name - if it's passed we will map the css to a tagname\n   * @param { string } css - css string\n   * @returns {Object} self\n   */\n  add(name, css) {\n    if (!CSS_BY_NAME.has(name)) {\n      CSS_BY_NAME.set(name, css);\n      this.inject();\n    }\n\n    return this;\n  },\n\n  /**\n   * Inject all previously saved tag styles into DOM\n   * innerHTML seems slow: http://jsperf.com/riot-insert-style\n   * @returns {Object} self\n   */\n  inject() {\n    getStyleNode().innerHTML = [...CSS_BY_NAME.values()].join('\\n');\n    return this;\n  },\n\n  /**\n   * Remove a tag style from the DOM\n   * @param {string} name a registered tagname\n   * @returns {Object} self\n   */\n  remove(name) {\n    if (CSS_BY_NAME.has(name)) {\n      CSS_BY_NAME.delete(name);\n      this.inject();\n    }\n\n    return this;\n  }\n\n};\n\n/**\n * Function to curry any javascript method\n * @param   {Function}  fn - the target function we want to curry\n * @param   {...[args]} acc - initial arguments\n * @returns {Function|*} it will return a function until the target function\n *                       will receive all of its arguments\n */\nfunction curry(fn) {\n  for (var _len = arguments.length, acc = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    acc[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    args = [...acc, ...args];\n    return args.length < fn.length ? curry(fn, ...args) : fn(...args);\n  };\n}\n\nconst COMPONENT_CORE_HELPERS = Object.freeze({\n  // component helpers\n  $(selector) {\n    return $(selector, this.root)[0];\n  },\n\n  $$(selector) {\n    return $(selector, this.root);\n  }\n\n});\nconst COMPONENT_LIFECYCLE_METHODS = Object.freeze({\n  shouldUpdate: noop,\n  onBeforeMount: noop,\n  onMounted: noop,\n  onBeforeUpdate: noop,\n  onUpdated: noop,\n  onBeforeUnmount: noop,\n  onUnmounted: noop\n});\nconst MOCKED_TEMPLATE_INTERFACE = {\n  update: noop,\n  mount: noop,\n  unmount: noop,\n  clone: noop,\n  createDOM: noop\n  /**\n   * Create the component interface needed for the @riotjs/dom-bindings tag bindings\n   * @param   {string} options.css - component css\n   * @param   {Function} options.template - functon that will return the dom-bindings template function\n   * @param   {Object} options.exports - component interface\n   * @param   {string} options.name - component name\n   * @returns {Object} component like interface\n   */\n\n};\nfunction createComponent(_ref) {\n  let css = _ref.css,\n      template = _ref.template,\n      exports = _ref.exports,\n      name = _ref.name;\n  return (_ref2) => {\n    let slots = _ref2.slots,\n        attributes = _ref2.attributes,\n        props = _ref2.props;\n    const component = defineComponent({\n      css,\n      template,\n      exports,\n      name\n    })({\n      slots,\n      attributes,\n      props\n    }); // notice that for the components create via tag binding\n    // we need to invert the mount (state/parentScope) arguments\n    // the template bindings will only forward the parentScope updates\n    // and never deal with the component state\n\n    return {\n      mount(element, parentScope, state) {\n        return component.mount(element, state, parentScope);\n      },\n\n      update(parentScope, state) {\n        return component.update(state, parentScope);\n      },\n\n      unmount(preserveRoot) {\n        return component.unmount(preserveRoot);\n      }\n\n    };\n  };\n}\n/**\n * Component definition function\n * @param   {Object} implementation - the componen implementation will be generated via compiler\n * @param   {Object} component - the component initial properties\n * @returns {Object} a new component implementation object\n */\n\nfunction defineComponent(_ref3) {\n  let css = _ref3.css,\n      template = _ref3.template,\n      exports = _ref3.exports,\n      name = _ref3.name;\n  const componentAPI = callOrAssign(exports) || {};\n  const components = createSubcomponents(componentAPI.components); // add the component css into the DOM\n\n  if (css && name) cssManager.add(name, css);\n  return curry(enhanceComponentAPI)(defineProperties( // set the component defaults without overriding the original component API\n  defineDefaults(componentAPI, Object.assign({}, COMPONENT_LIFECYCLE_METHODS, {\n    state: {}\n  })), Object.assign({\n    // defined during the component creation\n    slots: null,\n    root: null\n  }, COMPONENT_CORE_HELPERS, {\n    name,\n    css,\n    template: template ? template(create$6, expressionTypes, bindingTypes, name => {\n      return components[name] || COMPONENTS_IMPLEMENTATION_MAP.get(name);\n    }) : MOCKED_TEMPLATE_INTERFACE\n  })));\n}\n/**\n * Evaluate the component properties either from its real attributes or from its attribute expressions\n * @param   {HTMLElement} element - component root\n * @param   {Array}  attributeExpressions - attribute expressions generated by the riot compiler\n * @param   {Object} scope - current scope\n * @param   {Object} currentProps - current component properties\n * @returns {Object} attributes key value pairs\n */\n\nfunction evaluateProps(element, attributeExpressions, scope, currentProps) {\n  if (attributeExpressions === void 0) {\n    attributeExpressions = [];\n  }\n\n  if (currentProps === void 0) {\n    currentProps = {};\n  }\n\n  if (attributeExpressions.length) {\n    return scope ? evaluateAttributeExpressions(attributeExpressions, scope) : currentProps;\n  }\n\n  return DOMattributesToObject(element);\n}\n/**\n * Create the bindings to update the component attributes\n * @param   {Array} attributes - list of attribute bindings\n * @returns {TemplateChunk} - template bindings object\n */\n\n\nfunction createAttributeBindings(attributes) {\n  return create$6(null, [{\n    expressions: (attributes || []).map(attr => {\n      return Object.assign({\n        type: expressionTypes.ATTRIBUTE\n      }, attr);\n    })\n  }]);\n}\n/**\n * Create the subcomponents that can be included inside a tag in runtime\n * @param   {Object} components - components imported in runtime\n * @returns {Object} all the components transformed into Riot.Component factory functions\n */\n\n\nfunction createSubcomponents(components) {\n  if (components === void 0) {\n    components = {};\n  }\n\n  return Object.entries(callOrAssign(components)).reduce((acc, _ref4) => {\n    let key = _ref4[0],\n        value = _ref4[1];\n    acc[camelToDashCase(key)] = createComponent(value);\n    return acc;\n  }, {});\n}\n/**\n * Run the component instance through all the plugins set by the user\n * @param   {Object} component - component instance\n * @returns {Object} the component enhanced by the plugins\n */\n\n\nfunction runPlugins(component) {\n  return [...PLUGINS_SET].reduce((c, fn) => fn(c) || c, component);\n}\n/**\n * Compute the component current state merging it with its previous state\n * @param   {Object} oldState - previous state object\n * @param   {Object} newState - new state givent to the `update` call\n * @returns {Object} new object state\n */\n\n\nfunction computeState(oldState, newState) {\n  return Object.assign({}, oldState, callOrAssign(newState));\n}\n/**\n * Add eventually the \"is\" attribute to link this DOM node to its css\n * @param {HTMLElement} element - target root node\n * @param {string} name - name of the component mounted\n * @returns {undefined} it's a void function\n */\n\n\nfunction addCssHook(element, name) {\n  if (getName(element) !== name) {\n    set(element, 'is', name);\n  }\n}\n/**\n * Component creation factory function that will enhance the user provided API\n * @param   {Object} component - a component implementation previously defined\n * @param   {Array} options.slots - component slots generated via riot compiler\n * @param   {Array} options.attributes - attribute expressions generated via riot compiler\n * @returns {Riot.Component} a riot component instance\n */\n\n\nfunction enhanceComponentAPI(component, _ref5) {\n  let slots = _ref5.slots,\n      attributes = _ref5.attributes,\n      props = _ref5.props;\n  const attributeBindings = createAttributeBindings(attributes);\n  const initialProps = callOrAssign(props);\n  return autobindMethods(runPlugins(defineProperties(Object.create(component), {\n    mount(element, state, parentScope) {\n      if (state === void 0) {\n        state = {};\n      }\n\n      this.props = Object.freeze(Object.assign({}, initialProps, evaluateProps(element, attributes, parentScope)));\n      this.state = computeState(this.state, state);\n      this[TEMPLATE_KEY_SYMBOL] = this.template.createDOM(element).clone();\n      this[ATTRIBUTES_KEY_SYMBOL] = attributeBindings.createDOM(element).clone(); // link this object to the DOM node\n\n      element[DOM_COMPONENT_INSTANCE_PROPERTY] = this; // add eventually the 'is' attribute\n\n      component.name && addCssHook(element, component.name); // define the root element\n\n      defineProperty(this, 'root', element); // before mount lifecycle event\n\n      this.onBeforeMount(this.props, this.state); // handlte the template and its attributes\n\n      this[ATTRIBUTES_KEY_SYMBOL].mount(element, parentScope);\n      this[TEMPLATE_KEY_SYMBOL].mount(element, this); // create the slots and mount them\n\n      this[SLOTS_KEY_SYMBOL] = createSlots(element, slots || []).mount(parentScope);\n      this.onMounted(this.props, this.state);\n      return this;\n    },\n\n    update(state, parentScope) {\n      if (state === void 0) {\n        state = {};\n      }\n\n      const newProps = evaluateProps(this.root, attributes, parentScope, this.props);\n      if (this.shouldUpdate(newProps, this.props) === false) return;\n      this.props = Object.freeze(Object.assign({}, initialProps, newProps));\n      this.state = computeState(this.state, state);\n      this.onBeforeUpdate(this.props, this.state);\n\n      if (parentScope) {\n        this[ATTRIBUTES_KEY_SYMBOL].update(parentScope);\n        this[SLOTS_KEY_SYMBOL].update(parentScope);\n      }\n\n      this[TEMPLATE_KEY_SYMBOL].update(this);\n      this.onUpdated(this.props, this.state);\n      return this;\n    },\n\n    unmount(preserveRoot) {\n      this.onBeforeUnmount(this.props, this.state);\n      this[ATTRIBUTES_KEY_SYMBOL].unmount();\n      this[SLOTS_KEY_SYMBOL].unmount();\n      this[TEMPLATE_KEY_SYMBOL].unmount(this, !preserveRoot);\n      this.onUnmounted(this.props, this.state);\n      return this;\n    }\n\n  })), Object.keys(component).filter(prop => isFunction(component[prop])));\n}\n/**\n * Component initialization function starting from a DOM node\n * @param   {HTMLElement} element - element to upgrade\n * @param   {Object} initialProps - initial component properties\n * @param   {string} componentName - component id\n * @returns {Object} a new component instance bound to a DOM node\n */\n\nfunction mountComponent(element, initialProps, componentName) {\n  const name = componentName || getName(element);\n  if (!COMPONENTS_IMPLEMENTATION_MAP.has(name)) panic(`The component named \"${name}\" was never registered`);\n  const component = COMPONENTS_IMPLEMENTATION_MAP.get(name)({\n    props: initialProps\n  });\n  return component.mount(element);\n}\n\n/**\n * Similar to compose but performs from left-to-right function composition.<br/>\n * {@link https://30secondsofcode.org/function#composeright see also}\n * @param   {...[function]} fns) - list of unary function\n * @returns {*} result of the computation\n */\n/**\n * Performs right-to-left function composition.<br/>\n * Use Array.prototype.reduce() to perform right-to-left function composition.<br/>\n * The last (rightmost) function can accept one or more arguments; the remaining functions must be unary.<br/>\n * {@link https://30secondsofcode.org/function#compose original source code}\n * @param   {...[function]} fns) - list of unary function\n * @returns {*} result of the computation\n */\n\nfunction compose() {\n  for (var _len2 = arguments.length, fns = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fns[_key2] = arguments[_key2];\n  }\n\n  return fns.reduce((f, g) => function () {\n    return f(g(...arguments));\n  });\n}\n\nconst DOM_COMPONENT_INSTANCE_PROPERTY$1 = DOM_COMPONENT_INSTANCE_PROPERTY,\n      COMPONENTS_IMPLEMENTATION_MAP$1 = COMPONENTS_IMPLEMENTATION_MAP,\n      PLUGINS_SET$1 = PLUGINS_SET;\n/**\n * Riot public api\n */\n\n/**\n * Register a custom tag by name\n * @param   {string} name - component name\n * @param   {Object} implementation - tag implementation\n * @returns {Map} map containing all the components implementations\n */\n\nfunction register(name, _ref) {\n  let css = _ref.css,\n      template = _ref.template,\n      exports = _ref.exports;\n  if (COMPONENTS_IMPLEMENTATION_MAP$1.has(name)) panic(`The component \"${name}\" was already registered`);\n  COMPONENTS_IMPLEMENTATION_MAP$1.set(name, createComponent({\n    name,\n    css,\n    template,\n    exports\n  }));\n  return COMPONENTS_IMPLEMENTATION_MAP$1;\n}\n/**\n * Unregister a riot web component\n * @param   {string} name - component name\n * @returns {Map} map containing all the components implementations\n */\n\nfunction unregister(name) {\n  if (!COMPONENTS_IMPLEMENTATION_MAP$1.has(name)) panic(`The component \"${name}\" was never registered`);\n  COMPONENTS_IMPLEMENTATION_MAP$1.delete(name);\n  cssManager.remove(name);\n  return COMPONENTS_IMPLEMENTATION_MAP$1;\n}\n/**\n * Mounting function that will work only for the components that were globally registered\n * @param   {string|HTMLElement} selector - query for the selection or a DOM element\n * @param   {Object} initialProps - the initial component properties\n * @param   {string} name - optional component name\n * @returns {Array} list of nodes upgraded\n */\n\nfunction mount(selector, initialProps, name) {\n  return $(selector).map(element => mountComponent(element, initialProps, name));\n}\n/**\n * Sweet unmounting helper function for the DOM node mounted manually by the user\n * @param   {string|HTMLElement} selector - query for the selection or a DOM element\n * @returns {Array} list of nodes unmounted\n */\n\nfunction unmount(selector) {\n  return $(selector).map(element => {\n    if (element[DOM_COMPONENT_INSTANCE_PROPERTY$1]) {\n      element[DOM_COMPONENT_INSTANCE_PROPERTY$1].unmount();\n    }\n\n    return element;\n  });\n}\n/**\n * Define a riot plugin\n * @param   {Function} plugin - function that will receive all the components created\n * @returns {Set} the set containing all the plugins installed\n */\n\nfunction install(plugin) {\n  if (!isFunction(plugin)) panic('Plugins must be of type function');\n  if (PLUGINS_SET$1.has(plugin)) panic('This plugin was already install');\n  PLUGINS_SET$1.add(plugin);\n  return PLUGINS_SET$1;\n}\n/**\n * Uninstall a riot plugin\n * @param   {Function} plugin - plugin previously installed\n * @returns {Set} the set containing all the plugins installed\n */\n\nfunction uninstall(plugin) {\n  if (!PLUGINS_SET$1.has(plugin)) panic('This plugin was never installed');\n  PLUGINS_SET$1.delete(plugin);\n  return PLUGINS_SET$1;\n}\n/**\n * Helpter method to create component without relying on the registered ones\n * @param   {Object} implementation - component implementation\n * @returns {Function} function that will allow you to mount a riot component on a DOM node\n */\n\nfunction component(implementation) {\n  return (el, props) => compose(c => c.mount(el), c => c({\n    props\n  }), createComponent)(implementation);\n}\n/** @type {string} current riot version */\n\nconst version = 'v4.0.0-rc.7'; // expose some internal stuff that might be used from external tools\n\nconst __ = {\n  cssManager,\n  defineComponent,\n  globals\n};\n\nexport { __, component, install, mount, register, uninstall, unmount, unregister, version };\n","import riot from '../../node_modules/riot/riot.esm.js'\nimport App from '../riot/app.riot'\nimport RawHtml from '../riot/raw-html.riot'\n\nconsole.log(App)\nconsole.log(RawHtml)\n\nriot.register('app', App)\nriot.register('raw-html', RawHtml)\n\nriot.mount('[data-riot]')\n\n// anime.js サンプル\nvar animeSample = anime({\n  targets: '.js-anime',\n  translateX: 240,\n  duration: 800,\n  direction: 'alternate',\n  easing: 'easeInOutExpo',\n  loop: true\n})\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}